@startuml "Classes Diagram"

skinparam backGroundColor #69696936

abstract class Connect4 #ff00004f {
  - game
  - gameView
  - players
  - playersView

  + init() : void
  - play() : void
}

class Connect4Console #ffea0054 extends Connect4 {
  - game : GameConsole
  - gameView : GameViewConsole
  - players : PlayersConsole
  - playersView : PlayersViewConsole

  + init() : void
  - play() : void
}

class Connect4Web #4e90ff54 extends Connect4 {
  - game : GameWeb
  - gameView : GameViewWeb
  - players : PlayersWeb
  - playersView : PlayersViewWeb

  + init() : void
  - play() : void
}

abstract class Game {
  + NUMBER_PLAYERS
  + COLORS
  - turn
  - board

  + reset() : void
  + getTurn() : number
  + getBoard() : Array
  + changeTurn() : void
  + isGameOver(column) : boolean
  + chooseColumn(player) : number
  + putToken(column, color) : void
}

class GameConsole #ffea0054 extends Game {
  + NUMBER_PLAYERS
  + COLORS
  - turn
  - board

  + reset() : void
  + getTurn() : number
  + getBoard() : Array
  + changeTurn() : void
  + isGameOver(column) : boolean
  + chooseColumn(player) : number
  + putToken(column, color) : void
}

class GameWeb #4e90ff54 extends Game {
  + NUMBER_PLAYERS
  + COLORS
  - turn
  - board

  + reset() : void
  + getTurn() : number
  + getBoard() : Array
  + changeTurn() : void
  + isGameOver(column) : boolean
  + chooseColumn(player) : number
  + putToken(column, color) : void
}

abstract class GameView #ff00004f {
  + boardView : BoardView
  + messages : Messages
  + playersView : PlayersView

  + playAgain() : boolean
  - isValidAnswer(answer) : boolean
  + showMessage(message) : void
  + showBoard(board) : void
  + choosePlayers(colors) : Array
}

class GameViewConsole #ffea0054 extends GameView {
  + boardView : BoardView
  + playersView : PlayersViewConsole
  + messages : Messages

  + playAgain() : boolean
  - isValidAnswer(answer) : boolean
  + showMessage(message) : void
  + showBoard(board) : void
  + choosePlayers(colors) : Array
}

class GameViewWeb #4e90ff54 extends GameView {
  + boardView : BoardView
  + playersView : PlayersViewWeb
  + messages : Messages

  + playAgain() : boolean
  - isValidAnswer(answer) : boolean
  + showMessage(message) : void
  + showBoard(board) : void
  + choosePlayers(colors) : Array
}

abstract class Board {
  + static NUMBER_ROWS = 6
  + static NUMBER_COLUMNS = 7
  + static DELIMITER = ' | '
  + static EMPTY = ' '
  + static NUMBER_WINNER_TOKENS = 4
  - board : Array
  - line : Array

  + reset() : void
  + getBoard() : Array
  + isConnect4(column) : boolean
  + chooseColumn(player) : number
  - isValidColumn(column) : boolean
  + isFullColumn(column) : boolean
  + isFullBoard() : boolean
  + putToken(column, color) : void
  + getRow(column) : number
}

class BoardConsole #ffea0054 extends Board {
  static NUMBER_ROWS
  static NUMBER_COLUMNS
  static DELIMITER
  static EMPTY
  static NUMBER_WINNER_TOKENS
  - board : Array
  - line : Array

  + reset() : void
  + getBoard() : Array
  + isConnect4(column) : boolean
  + chooseColumn(player) : number
  - isValidColumn(column) : boolean
  + isFullColumn(column) : boolean
  + isFullBoard() : boolean
  + putToken(column, color) : void
  + getRow(column) : number
}

class BoardWeb #4e90ff54 extends Board {
  static NUMBER_ROWS
  static NUMBER_COLUMNS
  static DELIMITER
  static EMPTY
  static NUMBER_WINNER_TOKENS
  - board : Array
  - line : Array

  + reset() : void
  + getBoard() : Array
  + isConnect4(column) : boolean
  + chooseColumn(player) : number
  - isValidColumn(column) : boolean
  + isFullColumn(column) : boolean
  + isFullBoard() : boolean
  + putToken(column, color) : void
  + getRow(column) : number
}

abstract class BoardView #ff00004f {
  + console : Console

  + show(board) : void
}

class BoardViewConsole #ffea0054 extends BoardView {
  + console : Console

  + show(board) : void
}

class BoardViewWeb #4e90ff54 extends BoardView {
  + console : Console

  + show(board) : void
}

abstract class Players #ff00004f {
  - players : Array

  + setPlayers(choosedPlayers) : Array
  + getPlayers() : Array
}

class PlayersConsole #ffea0054 extends Players {
  - players : Array

  + setPlayers(choosedPlayers) : Array
  + getPlayers() : Array
}

class PlayersWeb #4e90ff54 extends Players {
  - players : Array

  + setPlayers(choosedPlayers) : Array
  + getPlayers() : Array
}

abstract class PlayersView #ff00004f {
  + choosePlayers(colors) : Array
  - isValidPlayerType(playersType) : boolean
}

class PlayersViewConsole #ffea0054 extends PlayersView {
  + choosePlayers(colors) : Array
  - isValidPlayerType(playersType) : boolean
}

class PlayersViewWeb #4e90ff54 extends PlayersView {
  + choosePlayers(colors) : Array
  - isValidPlayerType(playersType) : boolean
}

abstract class Player #ff00004f {
  + chooseColumn() : void
}

abstract class PlayerHuman #ff00004f extends Player {
  + chooseColumn() : number
  - isValidColumn(column) : boolean
}

class PlayerHumanConsole #ffea0054 extends PlayerHuman {
  + console : Object

  + chooseColumn() : number
  - isValidColumn(column) : boolean
}

class PlayerHumanWeb #4e90ff54 extends PlayerHuman {
  + console : Object

  + chooseColumn() : number
  - isValidColumn(column) : boolean
}

class PlayerMachine extends Player {
  + chooseColumn() : number
  - randomColumn() : number
}

class Line {
  - north
  - northWest
  - west
  - southWest
  + DIRECTIONS

  + getLine(coordenate, direction, board) : Array
  + isValidCoordenate(column, row) : boolean
  + shift(coordenate, direction) : Array
  + isWinner(line) : boolean
  + getOppositeDirection(direction) : Array
}

class Messages {
  - messages : JSON

  + get(message) : string
}


GameConsole *-down-> BoardConsole

GameView *-> Messages

Board *-down-> Line
Board .> Board

Connect4Console *--down-> GameConsole
Connect4Console *--down-> PlayersConsole
Connect4Console *--down-> PlayersViewConsole
Connect4Console *--down-> GameViewConsole

Connect4Web *--down-> GameWeb
Connect4Web *--down-> PlayersWeb
Connect4Web *--down-> PlayersViewWeb
Connect4Web *--down-> GameViewWeb

GameViewConsole *-down-> BoardViewConsole

GameViewWeb *-down-> BoardViewWeb

BoardViewConsole .left.> BoardConsole

BoardViewWeb .left.> BoardWeb

PlayersConsole *--down-> PlayerHumanConsole : 0..2
PlayersConsole *-down-> PlayerMachine : 0..2

PlayersWeb *--down-> PlayerHumanWeb : 0..2
PlayersWeb *-down-> PlayerMachine : 0..2

@enduml